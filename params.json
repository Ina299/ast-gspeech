{
  "name": "Ast-gspeech",
  "tagline": "Asterisk Streaming Connection with google speech API",
  "body": "# ast-gspeech\r\n##Asterisk Connection with Google Cloud Speech API\r\n\r\nYou have to follow the instructions to get google speech api working\r\n\r\nhttps://cloud.google.com/speech/docs/\r\n\r\nThis project use eagi to send the audio throw java grpc to google and return the text.\r\n\r\n```sh\r\nwget http://repos.fedorapeople.org/repos/dchen/apache-maven/epel-apache-maven.repo -O /etc/yum.repos.d/epel-apache-maven.repo\r\nyum install apache-maven\r\n```\r\n\r\nYou have to follow the instructions from https://github.com/GoogleCloudPlatform/java-docs-samples/tree/master/speech/grpc\r\n\r\nVisit the [Cloud Console](https://console.developers.google.com), and navigate to:\r\n`API Manager > Credentials > Create credentials >\r\nService account key > New service account`.\r\nCreate a new service account, and download the json credentials file.\r\n\r\nThen, set\r\nthe `GOOGLE_APPLICATION_CREDENTIALS` /var/lib/asterisk/agi-bin/ast-gspeech/bin/run.sh variable to point to your\r\ndownloaded service account credentials before running this example:\r\n\r\n    export GOOGLE_APPLICATION_CREDENTIALS=/path/to/your/credentials-key.json\r\n\r\nDownload Code:\r\ncd /var/lib/asterisk/agi-bin\r\ngit clone https://github.com/lbolanos/ast-gspeech.git\r\n\r\nWrite your service in /var/lib/asterisk/agi-bin/ast-gspeech/src/main/java/com/astgspeech/services\r\n\r\n\r\nThen, build the program:\r\n\r\n```sh\r\nchmod 755 /var/lib/asterisk/agi-bin/ast-gspeech/bin/run.sh\r\ndos2unix /var/lib/asterisk/agi-bin/ast-gspeech/bin/run.sh\r\ncd /var/lib/asterisk/agi-bin/ast-gspeech/\r\n$ mvn package\r\n```\r\n\r\n##HelloWorld\r\n```\r\npackage com.astgspeech.services;\r\n\r\nimport org.asteriskjava.fastagi.AgiChannel;\r\nimport org.asteriskjava.fastagi.AgiException;\r\nimport org.asteriskjava.fastagi.AgiRequest;\r\n\r\nimport com.astgspeech.BaseAgiRecoScript;\r\nimport com.google.cloud.speech.v1.RecognizeResponse;\r\nimport com.google.cloud.speech.v1.RecognizeResponse.EndpointerEvent;\r\nimport com.google.cloud.speech.v1.SpeechRecognitionResult;\r\n\r\npublic class HelloWorld extends BaseAgiRecoScript {\r\n\t\r\n\tprivate String lastTranscript = \"\";\r\n\r\n\t@Override\r\n\tpublic void service(AgiRequest request, AgiChannel channel) throws AgiException {\r\n\t\tanswer();\r\n\t\tstreamFile(\"beep\");\r\n\t\t/*\r\n        // ...say hello...\r\n        streamFile(\"welcome\");\r\n        streamFile(\"tt-monkeys\");\r\n        // ...and hangup.\r\n        hangup();\r\n        */\r\n\t\tsuper.service(request, channel);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onError(Throwable error) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onCompleted() {\r\n\t\t// TODO Auto-generated method stub\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean onEvent(EndpointerEvent endpoint) {\r\n\t\tswitch( endpoint.getNumber() ) {\r\n\t\t\tcase EndpointerEvent.END_OF_SPEECH_VALUE:\r\n\t\t\t\tif( lastTranscript.length() > 30 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean onNext(String transcript, float confidence, SpeechRecognitionResult speechRecognitionResult,\r\n\t\t\tRecognizeResponse response) {\r\n\t\tif( confidence > 0.8 ) {\r\n\t\t\tlastTranscript = transcript;\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tsetVariable( \"transcript\" ,transcript );\r\n\t\t} catch (AgiException e) {\r\n\t\t\te.printStackTrace(System.err);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean onFinal(String transcript, float confidence, SpeechRecognitionResult speechRecognitionResult,\r\n\t\t\tRecognizeResponse response) {\r\n\t\ttry {\r\n\t\t\tsetVariable( \"transcript\" ,transcript );\r\n\t\t} catch (AgiException e) {\r\n\t\t\te.printStackTrace(System.err);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n}\r\n```\r\n##AnsweringMachine\r\n```\r\npackage com.astgspeech.services;\r\n\r\nimport org.asteriskjava.fastagi.AgiChannel;\r\nimport org.asteriskjava.fastagi.AgiException;\r\nimport org.asteriskjava.fastagi.AgiRequest;\r\nimport org.asteriskjava.util.Log;\r\nimport org.asteriskjava.util.LogFactory;\r\n\r\nimport java.text.Normalizer;\r\nimport com.astgspeech.BaseAgiRecoScript;\r\nimport com.google.cloud.speech.v1.RecognizeResponse;\r\nimport com.google.cloud.speech.v1.RecognizeResponse.EndpointerEvent;\r\nimport com.google.cloud.speech.v1.SpeechRecognitionResult;\r\n\r\npublic class AnsweringMachine extends BaseAgiRecoScript {\r\n\t\r\n\tprivate final Log logger = LogFactory.getLog(AnsweringMachine.class);\r\n\t\r\n\tprivate String lastTranscript = \"\";\r\n\r\n\t@Override\r\n\tpublic void service(AgiRequest request, AgiChannel channel) throws AgiException {\t\t\r\n\t\t/*\r\n        // ...say hello...\r\n        streamFile(\"welcome\");\r\n        streamFile(\"tt-monkeys\");\r\n        // ...and hangup.\r\n        hangup();\r\n        */\r\n\t\tsuper.service(request, channel);\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onError(Throwable error) {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic void onCompleted() {\r\n\t\t// TODO Auto-generated method stub\t\t\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean onEvent(EndpointerEvent endpoint) {\r\n\t\tswitch( endpoint.getNumber() ) {\r\n\t\t\tcase EndpointerEvent.END_OF_SPEECH_VALUE:\r\n\t\t\t\tif( lastTranscript.length() > 30 ) {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean onNext(String transcript, float confidence, SpeechRecognitionResult speechRecognitionResult,\r\n\t\t\tRecognizeResponse response) {\r\n\t\ttry{\r\n\t\t\tif( confidence > 0.8 ) {\r\n\t\t\t\tlastTranscript = transcript;\r\n\t\t\t}\r\n\t\t\tsetVariable( \"transcript\" ,transcript );\r\n\t\t\t\r\n\t\t\tString tol = Normalizer.normalize(transcript, Normalizer.Form.NFD).toLowerCase()\r\n\t\t\t\t.replaceAll(\"\\\\p{InCombiningDiacriticalMarks}+\", \"\");\r\n\t\t\tlogger.info(\"onNext:\" + tol + \" confidence:\" + confidence );\r\n\t\t\tif( confidence > 0.6 && \r\n\t\t\t\t( tol.contains(\"grabe su mensaje\" )  ||\r\n\t\t\t\t\ttol.contains(\"mensaje despues del tono\" )  ||\r\n\t\t\t\t\ttol.contains( \"lleno y no puede recibir\" ) ||\r\n\t\t\t\t\ttol.contains( \"buzon\" ) \r\n\t\t\t\t\t) ) {\r\n\t\t\t\tsetVariable( \"MACHINE\" ,\"TRUE\" );\r\n\t\t\t\thangup();\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//logger.info(\"onNext: not found\" );\r\n\t\t\tif( confidence > 0.6 && \r\n\t\t\t\t( tol.contains(\"alo\" ) ) ){\r\n\t\t\t\tsetVariable( \"MACHINE\" ,\"FALSE\" );\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} catch (AgiException e) {\r\n\t\t\te.printStackTrace(System.err);\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t@Override\r\n\tpublic boolean onFinal(String transcript, float confidence, SpeechRecognitionResult speechRecognitionResult,\r\n\t\t\tRecognizeResponse response) {\r\n\t\ttry {\r\n\t\t\tsetVariable( \"transcript\" ,transcript );\r\n\t\t} catch (AgiException e) {\r\n\t\t\te.printStackTrace(System.err);\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\r\n}\r\n\r\n```\r\n\r\n\r\nModify /etc/asterisk/extensions.conf\r\n```\r\nExample 1:\r\nexten => 127,1,eagi(./ast-gspeech/bin/run.sh,com.astgspeech.services.HelloWorld)\r\nexten => 127,n,Verbose(1,The text you just said is: ${transcript})\r\nexten => 127,n,Playback(hello-world)\r\nexten => 127,n,Hangup()\r\n```\r\n\r\n```\r\nExample 2:\r\nexten => 126,1,Answer()\r\nexten => 126,n,Playback(vm-savemessage)\r\nexten => 126,n,eagi(./ast-gspeech/bin/run.sh)\r\n;exten => 126,n,Festival(${transcript})\r\nexten => 126,n,Verbose(1,The text you just said is: ${transcript})\r\nexten => 126,n,Playback(hello-world)\r\nexten => 126,n,Hangup()\r\n```\r\nOutput:\r\n```\r\nReceived response: results {\r\n  alternatives {\r\n    transcript: \"el d\\303\\255a de entrega de notas recibida la orden particular quienes hayan aprobado todas las materias iespien a paz y salvo\"\r\n    confidence: 0.80237895\r\n  }\r\n  is_final: true\r\n}\r\n\r\nSET VARIABLE \"transcript\" \"el día de entrega de notas recibida la orden particular quienes hayan aprobado todas las materias y estén a paz y salvo\" returned:200 result=1\r\nSent 332800 bytes from audio file:\r\nReceived response: endpoint: END_OF_AUDIO\r\n\r\nrecognize completed.\r\nJun 02, 2016 6:25:06 PM io.grpc.internal.TransportSet$TransportListener transportShutdown\r\nINFO: Transport io.grpc.netty.NettyClientTransport@457b01e5(speech.googleapis.com/216.58.218.10:443) for speech.googleapis.com/216.58.218.10:443 is being shutdown\r\nJun 02, 2016 6:25:06 PM io.grpc.internal.TransportSet$TransportListener transportTerminated\r\nINFO: Transport io.grpc.netty.NettyClientTransport@457b01e5(speech.googleapis.com/216.58.218.10:443) for speech.googleapis.com/216.58.218.10:443 is terminated\r\n    -- <SIP/6001-00000003>AGI Script ./astexample/bin/run.sh completed, returning 0\r\n    -- Executing [126@from-internal:4] Verbose(\"SIP/6001-00000003\", \"1,The text you just said is: el día de entrega de notas recibida la orden particular quienes hayan aprobado todas las materias y estén a paz y salvo\") in new stack\r\n The text you just said is: el día de entrega de notas recibida la orden particular quienes hayan aprobado todas las materias y estén a paz y salvo\r\n    -- Executing [126@from-internal:5] Playback(\"SIP/6001-00000003\", \"hello-world\") in new stack\r\n    -- <SIP/6001-00000003> Playing 'hello-world.gsm' (language 'en')\r\n    -- Executing [126@from-internal:6] Hangup(\"SIP/6001-00000003\", \"\") in new stack\r\n  == Spawn extension (from-internal, 126, 6) exited non-zero on 'SIP/6001-00000003'\r\n```\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}